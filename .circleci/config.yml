version: 2.1

jobs:
  build-and-save:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - run:
          name: "Print ldd version"
          command: "ldd --version"
      - run:
          name: "Print libc version"
          command: "echo #include <gnu/libc-version.h>
#include <stdio.h>
#include <unistd.h>

int main() {
    // method 1, use macro
    printf(\"%d.%d\n\", __GLIBC__, __GLIBC_MINOR__);

    // method 2, use gnu_get_libc_version 
    puts(gnu_get_libc_version());

    // method 3, use confstr function
    char version[30] = {0};
    confstr(_CS_GNU_LIBC_VERSION, version, 30);
    puts(version);

    return 0;
}
 > libc_version.c && gcc libc_version.c -o libc_version && ./libc_version"
      - run: 
          name: "Install rust"
          command: "curl https://sh.rustup.rs -sSf | sh -s -- -y"

      - run:
          name: "Release build"
          command: "source $HOME/.cargo/env && cd dino-backend && cargo build --release"
      - store_artifacts:
          name: "Save binary"
          path: ./dino-backend/target/release/dino-backend
          destination: dino-backend

workflows:
  build:
    jobs:
      - build-and-save
